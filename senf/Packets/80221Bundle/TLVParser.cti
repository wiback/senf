//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief TLVParser inline template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::MIHFIdTLVParser::binaryNAIEncoder<OutputIterator>

template <class OutputIterator>
prefix_ senf::MIHFIdTLVParser::binaryNAIEncoder<OutputIterator>::binaryNAIEncoder(OutputIterator & i)
    : i_(i)
{}

template <class OutputIterator>
prefix_ void senf::MIHFIdTLVParser::binaryNAIEncoder<OutputIterator>::operator()(boost::uint8_t v)
{
    *i_++ = '\\';
    *i_++ = v;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::MIHFIdTLVParser

template <class OutputIterator>
prefix_ boost::function_output_iterator<senf::MIHFIdTLVParser::binaryNAIEncoder<OutputIterator> >
senf::MIHFIdTLVParser::getNAIEncodedOutputIterator(OutputIterator & i)
{
    return boost::make_function_output_iterator(binaryNAIEncoder<OutputIterator>(i));
}

template <class Iterator>
prefix_ boost::filter_iterator<senf::MIHFIdTLVParser::binaryNAIDecoder, Iterator>
senf::MIHFIdTLVParser::getNAIDecodedIterator(Iterator begin, Iterator end)
{
    return boost::make_filter_iterator<binaryNAIDecoder>(begin, end);
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
