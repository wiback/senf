# -*- python -*-

Import('env')
import SENFSCons

###########################################################################

SENFSCons.AutoRules(env, exclude = [ 'bundledump.cc' ], doc_extra_sources = [
    env.Dia2Png("structure.dia"),
    env.Dia2Png("80221Bundle/TLV.dia"),
    env.Dia2Png("GenericTLV.dia"),
    env.PkgDraw("MPEGDVBBundle/DTCPPacket.hh"),
    env.PkgDraw("DefaultBundle/EthernetPacket.hh",
                PKGDRAWPACKETS = "EthernetPacketParser"),
    env.PkgDraw("DefaultBundle/EthVLanPacket.png", "DefaultBundle/EthernetPacket.hh",
                PKGDRAWPACKETS = "EthVLanPacketParser"),
    env.PkgDraw("DefaultBundle/IPv4Packet.hh"),
    env.PkgDraw("DefaultBundle/IPv6Packet.hh"),
    env.PkgDraw("DefaultBundle/LlcSnapPacket.hh"),
    env.PkgDraw("DefaultBundle/UDPPacket.hh"),
    env.PkgDraw("DefaultBundle/TCPPacket.hh"),
    env.PkgDraw("DefaultBundle/IPv6FragmentPacket.png", "DefaultBundle/IPv6Extensions.hh",
                PKGDRAWPACKETS = "IPv6FragmentPacketParser"),
    env.PkgDraw("DefaultBundle/IPv6RoutingPacket.png", "DefaultBundle/IPv6Extensions.hh",
                PKGDRAWPACKETS = "IPv6RoutingPacketParser"),
    env.PkgDraw("DefaultBundle/IPv6HopByHopOptionsPacket.png", "DefaultBundle/IPv6Extensions.hh",
                PKGDRAWPACKETS = "IPv6HopByHopOptionsPacketParser"),
    env.PkgDraw("DefaultBundle/IPv6DestinationOptionsPacket.png", "DefaultBundle/IPv6Extensions.hh",
                PKGDRAWPACKETS = "IPv6DestinationOptionsPacketParser"),
    env.PkgDraw("DefaultBundle/ICMPv6Packet.hh"),
    env.PkgDraw("DefaultBundle/ICMPv6EchoRequest.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6EchoRequestParser"),
    env.PkgDraw("DefaultBundle/ICMPv6EchoReply.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6EchoReplyParser"),
    env.PkgDraw("DefaultBundle/ICMPv6ErrDestUnreachable.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6ErrDestUnreachableParser"),
    env.PkgDraw("DefaultBundle/ICMPv6ErrTooBig.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6ErrTooBigParser"),
    env.PkgDraw("DefaultBundle/ICMPv6ErrTimeExceeded.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6ErrTimeExceededParser"),
    env.PkgDraw("DefaultBundle/ICMPv6ErrParamProblem.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "ICMPv6ErrParamProblemParser"),
    env.PkgDraw("DefaultBundle/MLDv2ListenerQuery.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "MLDv2ListenerQueryParser"),
    env.PkgDraw("DefaultBundle/MLDv2ListenerReport.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "MLDv2ListenerReportParser"),
    env.PkgDraw("DefaultBundle/MLDv2AddressRecord.png", "DefaultBundle/ICMPv6TypePacket.hh",
                PKGDRAWPACKETS = "MLDv2AddressRecordParser"),
    env.PkgDraw("80221Bundle/MIHPacket.hh",
                PKGDRAWPACKETS = "MIHPacketParser"),
    env.PkgDraw("80211Bundle/WLANPacket.hh"),
    env.PkgDraw("80211Bundle/RadiotapPacket.hh"),
    env.PkgDraw("MPEGDVBBundle/GREPacket.hh"),
    env.PkgDraw("MPEGDVBBundle/MPESection.hh"),
    env.PkgDraw("MPEGDVBBundle/SNDUPacket.hh"),
    env.PkgDraw("MPEGDVBBundle/TransportPacket.hh"),
])

bundledump = env.Program('bundledump', [ 'bundledump.cc', '$LOCALLIBDIR/DefaultBundle.o' ],
                         LIBS = [ '$LIBS', 'dl' ])
env.Default(bundledump)
env.Install('$BININSTALLDIR', bundledump)
