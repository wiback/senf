//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief BitsetParser inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::LSB0Endianness

prefix_ std::size_t senf::LSB0Endianness::bytePosition(std::size_t totalBytes, std::size_t bitPos)
{
    return totalBytes-1 - bitPos/8;
}

prefix_ std::size_t senf::LSB0Endianness::bit(std::size_t bitPos)
{
    return 1u << (bitPos%8);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::MSB0Endianness

prefix_ std::size_t senf::MSB0Endianness::bytePosition(std::size_t totalBytes, std::size_t bitPos)
{
    return bitPos / 8;
}

prefix_ std::size_t senf::MSB0Endianness::bit(std::size_t bitPos)
{
    return 1u << (7-(bitPos%8));
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_
