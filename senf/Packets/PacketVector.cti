// $Id$
//
// Copyright (C) 2012
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at
// http://senf.berlios.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on,
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V.
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//   Stefan Bund <g0dil@berlios.de>

/** \file
    \brief PacketVector inline template implementation */

//#include "PacketVector.ih"

// Custom includes
#include <senf/Utils/senfassert.hh>

#define prefix_ inline
///////////////////////////////cti.p///////////////////////////////////////

#ifndef SENF_PACKET_STD_CONTAINER

template <class ForwardIterator>
prefix_ senf::PacketVector::PacketVector(ForwardIterator f, ForwardIterator l)
    : owner_ (true)
{
    int requestSize (std::distance(f,l));
    size_ = allocationSize(requestSize);
    data_ = static_cast<value_type *>(Pool::ordered_malloc(size_ >> ChunkSizeIndex));
    b_ = data_ + HeadRoom;
    e_ = b_ + requestSize;
    std::copy(f, l, b_);
}

template <class ForwardIterator>
prefix_ void senf::PacketVector::insert(iterator pos, ForwardIterator f, ForwardIterator l)
{
    SENF_ASSERT( pos >= b_ && pos <= e_, "invalid iterator passed to PacketVector::erase" );
    std::copy(f, l, move(pos, std::distance(f,l)));
}

#endif

///////////////////////////////cti.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
