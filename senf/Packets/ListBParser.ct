// $Id$
//
// Copyright (C) 2010
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief ListBParser non-inline template implementation  */

#include "ListBParser.ih"

// Custom includes

#define prefix_
///////////////////////////////ct.p////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// senf::detail::ListBParser_Policy<ElementParser,AuxPolicy>::container_policy

template <class ElementParser, class AuxPolicy>
prefix_
senf::detail::ListBParser_Policy<ElementParser,AuxPolicy>::container_policy::
container_policy(parser_policy const & p)
    : AuxPolicy (p)
{
    parser_type selfp (parser_type::get(p));
    size_type totalsz (selfp.bytes());
    data_iterator const e (selfp.i(totalsz));
    data_iterator i (AuxPolicy::adjust(selfp.i(), selfp.state()));
    n_ = 0;
    while (i!=e) {
        ElementParser p (i,selfp.state());
        size_type sz (senf::bytes(p));
        SENF_ASSERT(sz);
        i = p.i(sz);
        ++ n_;
    }
    container_size_ = selfp.data().size();
}

///////////////////////////////ct.e////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
