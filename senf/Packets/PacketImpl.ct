// $Id$
//
// Copyright (C) 2010
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at 
// http://senf.berlios.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on, 
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis, 
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V. 
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//   Stefan Bund <g0dil@berlios.de>

/** \file
    \brief PacketImpl non-inline template implementation  */

#include "PacketImpl.ih"

// Custom includes

#define prefix_
//-/////////////////////////////////////////////////////////////////////////////////////////////////

template <class Annotation>
senf::detail::AnnotationRegistry::RegistrationProxy<Annotation>
    senf::detail::AnnotationRegistry::Entry<Annotation>::proxy_;

template <class Annotation>
senf::detail::AnnotationRegistry::key_type
    senf::detail::AnnotationRegistry::Entry<Annotation>::key_;

template <class Annotation>
prefix_ void * senf::detail::PacketImpl::complexAnnotation()
{
    AnnotationRegistry::key_type key (AnnotationRegistry::lookup<Annotation>());
    void * rv (complexAnnotation(key));
    if (! rv) {
        while (complexAnnotations_.size() < ComplexAnnotations::size_type(-key))
            complexAnnotations_.push_back(0);
        complexAnnotations_.replace(-key-1, new AnnotationRegistry::Entry<Annotation>());
        rv = complexAnnotations_[-key-1].get();
    }
    return rv;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
