//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief IOEvent non-inline template implementation  */

//#include "IOEvent.ih"

// Custom includes

#define prefix_
//-/////////////////////////////////////////////////////////////////////////////////////////////////

template <class Handle>
prefix_ void senf::ppi::IOEvent::set(Handle handle, unsigned events)
{
    if (handle) {
        fd_ = senf::scheduler::get_descriptor(handle);
        event_.events(events).handle(fd_);
        if (enabled())
            event_.enable();
        else
            event_.disable();
    }
    else {
        event_.disable();
        event_.events(0).handle(-1);
        fd_ = -1;
    }
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
