//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief EventManager non-inline template implementation  */

//#include "EventManager.ih"

// Custom includes
#include <boost/ptr_container/ptr_vector.hpp>

#define prefix_
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::ppi::EventManager

template <class Descriptor>
prefix_ void
senf::ppi::EventManager::registerEvent(module::Module & module,
                                       typename Callback<Descriptor>::type callback,
                                       Descriptor & descriptor)
{
    registrations_.push_back(
        new detail::EventBinding<typename Descriptor::Event>(*this, module, callback, descriptor));
    descriptor.setBinding(
        static_cast< detail::EventBinding<typename Descriptor::Event> & >(registrations_.back()));
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
