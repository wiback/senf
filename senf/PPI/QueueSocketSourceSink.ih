//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief QueueSocketSourceSink internal header */

#ifndef IH_SENF_senf_PPI_QueueSocketSourceSink_
#define IH_SENF_senf_PPI_QueueSocketSourceSink_ 1

// Custom includes
#include <boost/type_traits/is_base_of.hpp>

//-/////////////////////////////////////////////////////////////////////////////////////////////////

namespace senf {
namespace ppi {

    namespace connector { class FastConnector; }

namespace detail {

    template <class Connector, bool IsFast=boost::is_base_of<connector::FastConnector, Connector>::value>
    struct RouteConnector
    {
        template <class Module, class Other>
        static void route(Module & module, Other & other, Connector & connector)
            { senf::ppi::module::detail::RouteHelper<Other, Connector>::route(
                    module, other, connector, other, connector); }
    };

    template <class Connector>
    struct RouteConnector<Connector, true>
    {
        template <class Module, class Other>
        static void route(Module & module, Other & other, Connector & connector)
            {  }
    };

}}}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
