//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief Route inline non-template implementation */

// Custom includes
#include "Connectors.hh"
#include "Events.hh"

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::ppi::RouteBase

prefix_ senf::ppi::RouteBase::~RouteBase()
{}

prefix_ bool senf::ppi::RouteBase::hasConnector(connector::Connector const & conn)
    const
{
    return v_hasConnector(conn);
}

prefix_ bool senf::ppi::RouteBase::hasEvent(EventDescriptor const & event)
    const
{
    return v_hasEvent(event);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// protected members

prefix_ senf::ppi::RouteBase::RouteBase()
{}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::ppi::ForwardingRoute

prefix_ bool senf::ppi::ForwardingRoute::autoThrottling()
    const
{
    return autoThrottling_;
}

prefix_ void senf::ppi::ForwardingRoute::autoThrottling(bool state)
{
    autoThrottling_ = state;
}

prefix_ bool senf::ppi::ForwardingRoute::throttled()
    const
{
    return v_throttled();
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// protected members

prefix_ senf::ppi::ForwardingRoute::ForwardingRoute()
    : autoThrottling_(true)
{}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// private members

prefix_ void senf::ppi::ForwardingRoute::notifyThrottle()
{
    v_notifyThrottle();
}

prefix_ void senf::ppi::ForwardingRoute::notifyUnthrottle()
{
    v_notifyUnthrottle();
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
