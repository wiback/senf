// $Id$
//
// Copyright (C) 2009 
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief MultiConnectorMixin non-inline template implementation  */

#include "MultiConnectorMixin.ih"

// Custom includes

#include <boost/lambda/lambda.hpp>

#define prefix_
///////////////////////////////ct.p////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// senf::ppi::module::MultiConnectorMixin<Self_,ConnectorType_,KeyType_,ContainerType_>

template <class Self_, class ConnectorType_, class KeyType_, class ContainerType_>
prefix_ void
senf::ppi::module::MultiConnectorMixin<Self_,ConnectorType_,KeyType_,ContainerType_>::
disconnected(ConnectorType_ const & c)
{
    typename ContainerType::iterator i (
        find_if(connectors_.begin(), connectors_.end(),
                boost::bind(&ContainerType_::value_type::second,_1) == &c));
    if (i != connectors_.end())
        connectors_.erase(i);
}

///////////////////////////////////////////////////////////////////////////
// senf::ppi::module::MultiConnectorMixin<Self_,ConnectorType_,void,ContainerType_>

template <class Self_, class ConnectorType_, class ContainerType_>
prefix_ void
senf::ppi::module::MultiConnectorMixin<Self_,ConnectorType_,void,ContainerType_>::
disconnected(ConnectorType_ const & c)
{
    using boost::lambda::_1;

    typename ContainerType::iterator i (
        find_if(connectors_.begin(), connectors_.end(), &_1 == &c));
    if (i != connectors_.end())
        connectors_.erase(i);
}

///////////////////////////////ct.e////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
