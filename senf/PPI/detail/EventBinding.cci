//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief EventBinding inline non-template implementation */

// Custom includes
#include <senf/PPI/Events.hh>

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::ppi::detail::EventBindingBase

prefix_ senf::ppi::EventManager & senf::ppi::detail::EventBindingBase::manager()
    const
{
    return *manager_;
}

prefix_ senf::ppi::module::Module & senf::ppi::detail::EventBindingBase::module()
    const
{
    return *module_;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// protected members

prefix_ senf::ppi::detail::EventBindingBase::EventBindingBase(EventManager & manager,
                                                              module::Module & module,
                                                              EventDescriptor & descriptor)
    : manager_(&manager), module_(&module), descriptor_(&descriptor)
{
    descriptor_->binding_ = this;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u ../test"
// End:
