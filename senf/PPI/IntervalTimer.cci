//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief IntervalTimer inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::ppi::IntervalTimer

prefix_ senf::ppi::IntervalTimer::IntervalTimer(ClockService::clock_type interval,
                                                unsigned eventsPerInterval)
    : interval_ (interval), eventsPerInterval_ (eventsPerInterval),
      timer_ ("senf::ppi::IntervalTimer",  boost::bind(&IntervalTimer::cb,this))
{}

prefix_ senf::ppi::IntervalTimer::IntervalTimer()
    : interval_ (0), eventsPerInterval_ (0),
      timer_ ("senf::ppi::IntervalTimer",  boost::bind(&IntervalTimer::cb,this))
{}

prefix_ void senf::ppi::IntervalTimer::interval(ClockService::clock_type interval,
                                                unsigned eventsPerInterval)
{
    enabled(false);
    interval_ = interval;
    eventsPerInterval_ = eventsPerInterval;
    enabled(true);
}

prefix_ std::pair<senf::ClockService::clock_type, unsigned> senf::ppi::IntervalTimer::interval()
    const
{
    return std::make_pair(interval_, eventsPerInterval_);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
