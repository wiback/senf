//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief Policy Framework non-inline template implemenation
 */

#include "SocketPolicy.ih"

// Custom includes
#include <senf/Utils/Exception.hh>
#include "senf/Utils/IgnoreValue.hh"

#define prefix_
//-/////////////////////////////////////////////////////////////////////////////////////////////////

#define SP_TemplateArgs(x1,x2,n,SomePolicy) BOOST_PP_COMMA_IF(n) class BOOST_PP_CAT(SomePolicy,_)
#define SP_TemplateParams(x1,x2,n,SomePolicy) BOOST_PP_COMMA_IF(n) BOOST_PP_CAT(SomePolicy,_)

template < BOOST_PP_SEQ_FOR_EACH_I( SP_TemplateArgs, , SENF_SOCKET_POLICIES ) >
prefix_ void senf::SocketPolicy< BOOST_PP_SEQ_FOR_EACH_I( SP_TemplateParams, , SENF_SOCKET_POLICIES ) >::
checkBaseOf(SocketPolicyBase const & other)
{
    // check, wether each policy of other is (dynamically!) convertible
    // to the corresponding (static) policy of this class. Throws
    // std::bad_cast on failure

#   define SP_CheckPolicy(x1,x2,SomePolicy)                             \
        senf::IGNORE( dynamic_cast<BOOST_PP_CAT(SomePolicy,_) const &>( \
                          other.BOOST_PP_CAT(the,SomePolicy)()) );

    try {
        BOOST_PP_SEQ_FOR_EACH( SP_CheckPolicy, , SENF_SOCKET_POLICIES )
    }
    SENF_WRAP_EXC_MSG(std::bad_cast, "in SP_CheckPolicy")

#   undef SP_CheckPolicy
}

#undef SP_TemplateArgs
#undef SP_TemplateParams

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// comment-column: 40
// End:
