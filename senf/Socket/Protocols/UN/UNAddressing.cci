//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief UNAddressing inline non-template implementation */

//#include "UNAddressing.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::UNSocketAddress

prefix_ senf::UNSocketAddress::UNSocketAddress()
    : BSDSocketAddress (sizeof(sockaddr_un), AF_UNIX)
{}

prefix_ senf::UNSocketAddress::UNSocketAddress(std::string const & p)
    : BSDSocketAddress (sizeof(sockaddr_un), AF_UNIX)
{
    path(p);
}

prefix_ senf::UNSocketAddress::UNSocketAddress(UNSocketAddress const & other)
    : BSDSocketAddress (other)
{}

prefix_ senf::UNSocketAddress& senf::UNSocketAddress::operator=(UNSocketAddress const & other)
{
    BSDSocketAddress::operator=(other);
    return *this;
}

prefix_ std::string senf::UNSocketAddress::path()
    const
{
    return std::string(addr_.sun_path, socklen()-sizeof(short));
}

prefix_ std::ostream & senf::operator<<(std::ostream & os, UNSocketAddress const & addr)
{
    os << addr.path();
    return os;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
