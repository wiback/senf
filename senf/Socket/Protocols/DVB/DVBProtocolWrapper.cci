// $Id$
//
// Copyright (C) 2007
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Anton Gillert <atx@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief DVBSocketController inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ void senf::DVBSectionProtocolWrapper::setSectionFilter(
        unsigned short int pid, u_int8_t filter, unsigned int flags, u_int8_t mask,
        u_int8_t mode, unsigned int timeout)
{
    protocol.setSectionFilter(pid, timeout, flags, filter, mask, mode);
}

prefix_ void senf::DVBSectionProtocolWrapper::setBufferSize(unsigned long size)
{
    protocol.setBufferSize(size);
}

prefix_ void senf::DVBSectionProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBSectionProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


prefix_ void senf::DVBPESProtocolWrapper::setPESFilter(unsigned short int pid, dmx_input_t input,
        dmx_output_t output, dmx_pes_type_t pesType, unsigned int flags)
{
    protocol.setPESFilter(pid, input, output, pesType, flags);
}

prefix_ void senf::DVBPESProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBPESProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_
