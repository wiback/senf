// $Id$
//
// Copyright (C) 2007
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at 
// http://senf.berlios.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on, 
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis, 
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V. 
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//   Anton Gillert <atx@berlios.de>
/** \file
    \brief DVBSocketController inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ void senf::DVBSectionProtocolWrapper::setSectionFilter(
        unsigned short int pid, u_int8_t filter, unsigned int flags, u_int8_t mask,
        u_int8_t mode, unsigned int timeout)
{
    protocol.setSectionFilter(pid, timeout, flags, filter, mask, mode);
}

prefix_ void senf::DVBSectionProtocolWrapper::setBufferSize(unsigned long size)
{
    protocol.setBufferSize(size);
}

prefix_ void senf::DVBSectionProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBSectionProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


prefix_ void senf::DVBPESProtocolWrapper::setPESFilter(unsigned short int pid, dmx_input_t input,
        dmx_output_t output, dmx_pes_type_t pesType, unsigned int flags)
{
    protocol.setPESFilter(pid, input, output, pesType, flags);
}

prefix_ void senf::DVBPESProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBPESProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_
