//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief DVBSocketController inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ void senf::DVBSectionProtocolWrapper::setSectionFilter(
        unsigned short int pid, uint8_t filter, unsigned int flags, uint8_t mask,
        uint8_t mode, unsigned int timeout)
{
    protocol.setSectionFilter(pid, timeout, flags, filter, mask, mode);
}

prefix_ void senf::DVBSectionProtocolWrapper::setBufferSize(unsigned long size)
{
    protocol.setBufferSize(size);
}

prefix_ void senf::DVBSectionProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBSectionProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


prefix_ void senf::DVBPESProtocolWrapper::setPESFilter(unsigned short int pid, dmx_input_t input,
        dmx_output_t output, dmx_pes_type_t pesType, unsigned int flags)
{
    protocol.setPESFilter(pid, input, output, pesType, flags);
}

prefix_ void senf::DVBPESProtocolWrapper::startFiltering()
{
    protocol.startFiltering();
}

prefix_ void senf::DVBPESProtocolWrapper::stopFiltering()
{
    protocol.stopFiltering();
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_
