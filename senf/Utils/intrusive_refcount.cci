// $Id$
//
// Copyright (C) 2006
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at 
// http://senf.berlios.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on, 
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis, 
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V. 
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//   Stefan Bund <g0dil@berlios.de>

/** \file
    \brief intrusive_refcount inline non-template implementation */

//#include "intrusive_refcount.ih"

// Custom includes
#include "senfassert.hh"

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ senf::intrusive_refcount_base::refcount_t senf::intrusive_refcount_base::refcount()
    const
{
    return refcount_;
}

prefix_ bool senf::intrusive_refcount_base::is_shared()
    const
{
    return refcount()>1;
}

prefix_ senf::intrusive_refcount_base::intrusive_refcount_base()
    : refcount_(0)
{}

prefix_ void senf::intrusive_refcount_base::add_ref()
{
    ++refcount_;
}

prefix_ bool senf::intrusive_refcount_base::release()
{
    SENF_ASSERT(refcount_>0,
                "senf::intrusive_refcount_base: Internal inconsistency: "
                "Calling release on dead object.");
    return --refcount_ == 0;
}

prefix_ senf::intrusive_refcount::intrusive_refcount()
{}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// comment-column: 40
// End:
