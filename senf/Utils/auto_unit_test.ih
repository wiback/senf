//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief auto_unit_test internal header */

#ifndef IH_SENF_senf_Utils_auto_unit_test_
#define IH_SENF_senf_Utils_auto_unit_test_ 1

// Custom includes
#include <iterator>
#include <boost/iterator/iterator_adaptor.hpp>

//-/////////////////////////////////////////////////////////////////////////////////////////////////

namespace senf {
namespace test {
namespace detail {

    template <class Type, class Iterator>
    struct ConvertingIterator
        : public boost::iterator_adaptor<
            ConvertingIterator<Type, Iterator>, Iterator, Type, boost::use_default, Type>
    {
        typedef boost::iterator_adaptor<
            ConvertingIterator<Type, Iterator>, Iterator, Type, boost::use_default, Type> Base;
        ConvertingIterator(Iterator i) : Base (i) {}
    };

    template <class Iterator, class vt = typename std::iterator_traits<Iterator>::value_type>
    struct NoCharIterator
    { typedef Iterator type; };

    template <class Iterator>
    struct NoCharIterator<Iterator, char>
    { typedef ConvertingIterator<int,Iterator> type; };

    template <class Iterator>
    struct NoCharIterator<Iterator, signed char>
    { typedef ConvertingIterator<int,Iterator> type; };

    template <class Iterator>
    struct NoCharIterator<Iterator, unsigned char>
    { typedef ConvertingIterator<unsigned,Iterator> type; };

}}}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
