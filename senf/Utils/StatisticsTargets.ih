//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief StatisticsTargets internal header */

#ifndef IH_SENF_Utils_StatisticsTargets_
#define IH_SENF_Utils_StatisticsTargets_ 1

// Custom includes
#include <string>
#include <senf/Utils/singleton.hh>

//-/////////////////////////////////////////////////////////////////////////////////////////////////

namespace senf {

    namespace console { class DirectoryNode; }

    class StatisticsBase;

namespace detail {

    class StatisticsLoggerRegistry
        : public senf::singleton<StatisticsLoggerRegistry>
    {
    public:
        typedef void (*AddFn)(senf::StatisticsBase &, unsigned,
                              senf::console::DirectoryNode &);

        using senf::singleton<StatisticsLoggerRegistry>::instance;
        using senf::singleton<StatisticsLoggerRegistry>::alive;

        void add(AddFn fn);
        void apply(senf::StatisticsBase & stats, unsigned rank,
                   senf::console::DirectoryNode & dir);

    private:
        typedef std::vector<AddFn> Adders;
        Adders adders_;
    };

    template <class Stream=void, class Area=void, class Level=void>
    struct StatisticsLogger
        : boost::noncopyable
    {
        StatisticsLogger(std::string const & label_);
        void operator()(unsigned cnt, float min, float avg, float max, float dev);

        std::string label;
    };

}}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
