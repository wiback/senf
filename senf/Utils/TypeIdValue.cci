//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief TypeIdValue inline non-template implementation */

//#include "TypeIdValue.ih"

// Custom includes
#include "TypeInfo.hh"
#include "senfassert.hh"

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ senf::TypeIdValue::TypeIdValue()
    : p_ (&typeid(void))
{}

prefix_ senf::TypeIdValue::TypeIdValue(std::type_info const & v)
    : p_ (&v)
{}

prefix_ bool senf::TypeIdValue::operator==(TypeIdValue const & other)
    const
{
    return (*p_) == (*other.p_);
}

prefix_ bool senf::TypeIdValue::operator<(TypeIdValue const & other)
    const
{
    return p_->before(*other.p_);
}

prefix_ std::string senf::TypeIdValue::name()
    const
{
    return p_->name();
}

prefix_ std::string senf::TypeIdValue::prettyName()
    const
{
    return senf::prettyName(id());
}

prefix_ std::type_info const & senf::TypeIdValue::id()
    const
{
    SENF_ASSERT(
        p_, "Internal failure: Empty TypeIdValue should have p_ point to typeid(void) not 0");
    return *p_;
}

prefix_ senf::TypeIdValue const senf::typeIdValue()
{
    return TypeIdValue();
}

prefix_ std::ostream & senf::operator<<(std::ostream & os, TypeIdValue const & v)
{
    os << v.prettyName();
    return os;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// comment-column: 40
// End:
