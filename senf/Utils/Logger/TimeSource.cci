//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief TimeSource inline non-template implementation */

#include "TimeSource.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::log::detail::TimeSourceManager

prefix_ senf::log::detail::TimeSourceManager::TimeSourceManager()
    : timeSource_ (new SystemTimeSource())
{}

prefix_ senf::log::time_type senf::log::detail::TimeSourceManager::now()
{
    return (*timeSource_)();
}

prefix_ void senf::log::detail::TimeSourceManager::timeSource(std::unique_ptr<TimeSource> source)
{
    timeSource_.reset(source.release());
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::log::TimeSource

prefix_ senf::log::time_type senf::log::TimeSource::now()
{
    return detail::TimeSourceManager::instance().now();
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// namespace senf::log members

prefix_ void senf::log::timeSource(std::unique_ptr<TimeSource> source)
{
    detail::TimeSourceManager::instance().timeSource(std::move(source));
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
