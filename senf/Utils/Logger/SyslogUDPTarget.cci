//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief SyslogUDPTarget inline non-template implementation */

//#include "SyslogUDPTarget.ih"

// Custom includes
#include <senf/Socket/Protocols/INet/ConnectedUDPSocketHandle.hh>
#include <senf/Utils/String.hh>

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ senf::log::SyslogUDPTarget::SyslogUDPTarget(INet4Address const & target, int facility)
    : Target("udp-" + senf::str(target)), LogFormat(consoleDir()), facility_ (facility),
      handle_ ( ConnectedUDPv4ClientSocketHandle(INet4SocketAddress(target, 514u)) ),
      syslogFormat_ (true)
{
    init();
}

prefix_ senf::log::SyslogUDPTarget::SyslogUDPTarget(INet4SocketAddress const & target, int facility)
    : Target("udp-" + senf::str(target)), LogFormat(consoleDir()), facility_ (facility),
      handle_ ( ConnectedUDPv4ClientSocketHandle(target) ),
      syslogFormat_ (true)
{
    init();
}

prefix_ senf::log::SyslogUDPTarget::SyslogUDPTarget(INet6Address const & target, int facility)
    : Target("udp-" + senf::str(target)), LogFormat(consoleDir()), facility_ (facility),
      handle_ ( ConnectedUDPv6ClientSocketHandle(INet6SocketAddress(target, 514u)) ),
      syslogFormat_ (true)
{
    init();
}

prefix_ senf::log::SyslogUDPTarget::SyslogUDPTarget(INet6SocketAddress const & target, int facility)
    : Target("udp-" + senf::str(target)), LogFormat(consoleDir()), facility_ (facility),
      handle_ ( ConnectedUDPv6ClientSocketHandle(target) ),
      syslogFormat_ (true)
{
    init();
}

prefix_ bool senf::log::SyslogUDPTarget::syslog()
    const
{
    return syslogFormat_;
}

prefix_ void senf::log::SyslogUDPTarget::syslog(bool enabled)
{
    syslogFormat_ = enabled;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
