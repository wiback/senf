//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief ConfigFile inline non-template implementation */

#include "ConfigFile.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::console::detail::ConfigFileSource
#ifndef DOXYGEN

prefix_ senf::console::detail::ConfigFileSource::ptr
senf::console::detail::ConfigFileSource::create(std::string const & filename)
{
    return ptr(new ConfigFileSource(filename));
}

prefix_ senf::console::detail::ConfigFileSource::ptr
senf::console::detail::ConfigFileSource::ignoreMissing()
{
    ignoreMissing_ = true;
    return ptr(this);
}

prefix_ senf::console::detail::ConfigFileSource::ConfigFileSource(std::string const & filename)
    : filename_ (filename), ignoreMissing_ (false)
{}
#endif

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::console::ConfigFile

prefix_ senf::console::ConfigFile::ConfigFile(std::string const & filename,
                                              DirectoryNode & root)
    : detail::BundleMixin(root), self_ (add(detail::ConfigFileSource::create(filename)))
{}

prefix_ void senf::console::ConfigFile::ignoreMissing()
{
    self_.ignoreMissing();
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////

prefix_ senf::console::detail::ConfigFileSource::ptr
senf::console::FileConfig(std::string const & filename)
{
    return detail::ConfigFileSource::create(filename);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
