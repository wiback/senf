//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief Node inline template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::console::DirectoryNode

template <class NodeType>
prefix_ NodeType & senf::console::DirectoryNode::add(std::string const & name,
                                                     boost::shared_ptr<NodeType> node)
{
    SENF_ASSERT( ! node->parent(), "Node can only be added to tree once" );
    node->name(name);
    add(node);
    return *node;
}

template <class NodeType>
prefix_ NodeType & senf::console::DirectoryNode::
add(std::string const & name, NodeType & node,
    typename boost::enable_if< boost::is_convertible<NodeType &, GenericNode &> >::type *)
{
    // This makes objects with implicit conversion operators work (hi, ScopedDirectory ..)
    add(name, static_cast<GenericNode &>(node).thisptr());
    return node;
}

template <class Factory>
prefix_ typename Factory::result_type senf::console::DirectoryNode::
add(std::string const & name, Factory const & factory,
    typename boost::enable_if< boost::is_convertible<Factory const &, detail::NodeFactory const &> >::type *)
{
    return factory.create(*this, name);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
