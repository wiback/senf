//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief StatisticAccumulator inline non-template implementation */

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::StatisticsData

prefix_ senf::StatisticsData::StatisticsData()
    : min(NAN), avg(NAN), max(NAN), stddev(NAN), cnt(0)
{}

prefix_ senf::StatisticsData::StatisticsData(float min_, float avg_, float max_, float stddev_, unsigned cnt_)
    : min(min_), avg(avg_), max(max_), stddev(stddev_), cnt(cnt_)
{}

prefix_ senf::StatisticsData::StatisticsData(float singleValue)
    : min(singleValue), avg(singleValue), max(singleValue), stddev(0.0f), cnt(1)
{}

prefix_ senf::StatisticsData::operator bool()
    const
{
    return cnt > 0;
}

prefix_ bool senf::StatisticsData::operator<(senf::StatisticsData const & other)
    const
{
    return avg < other.avg;
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
