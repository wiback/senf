//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief pool_alloc_mixin inline template implementation */

//#include "pool_alloc_mixin.ih"

// Custom includes
#include <senf/Utils/senfassert.hh>

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

template <class Self>
prefix_ void * senf::pool_alloc_mixin<Self>::operator new(size_t size)
{
    // When deriving from Self you may not change the class's size without
    // inheriting from pool_alloc_mixin again. See pool_alloc_mixin documentation.
    SENF_ASSERT( size <= sizeof(Self),
                 "senf::pool_alloc_mixin::operator new(): "
                 "Bad object size. Missing pool_alloc_mixin base in derived class?" );
#ifdef SENF_DEBUG
    allocCounter(1);
#endif
    return boost::singleton_pool< pool_alloc_mixin_tag, sizeof(Self) >::malloc();
}

template <class Self>
prefix_ void senf::pool_alloc_mixin<Self>::operator delete(void * p, size_t size)
{
#ifdef SENF_DEBUG
    allocCounter(-1);
#endif
    boost::singleton_pool< pool_alloc_mixin_tag, sizeof(Self) >::free(p);
}

#ifdef SENF_DEBUG

template <class Self>
prefix_ unsigned long senf::pool_alloc_mixin<Self>::allocCounter()
{
    return allocCounter(0);
}

template <class Self>
prefix_ unsigned long senf::pool_alloc_mixin<Self>::allocCounter(long delta)
{
    static unsigned long counter (0);
    counter += delta;
    return counter;
}

#endif

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// comment-column: 40
// End:
