// $Id:$
//
// Copyright (C) 2008
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at 
// http://senf.fokus.fraunhofer.de.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on, 
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis, 
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V. 
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//       Stefan Bund <g0dil@berlios.de>

/** \mainpage PPI Network Simulator

    This library provides facilities to simulate real physical networks using the PPI.

    \autotoc

    \section emu_main_interfaces Emulated network interfaces
    \seechapter \ref senf_emu_interfaces \n
    \seechapter \ref senf_emu_interface_implementations \n
    \seechapter \ref senf::emu::ApplyInterfaceDecorator \n
    \seechapter \ref senf::emu::EmulatedFrequencyRegistry

    The NetEmu interface abstraction allows to arbitrarily mix emulated and physical interfaces.
    This gives a lot of flexibility in scenario configuration.

    \warning You must start the senf::emu::EmulatedFrequencyRegistry before any traffic will flow
        across emulated wireless interfaces. See the documentation for more.

    \section emu_main_emushark Packet capture utility for emulated networks

    NetEmu includes a packet sniffing utility \c emushark which allows to capture packets on
    arbitrary emulated networks. Capture operation is possible either on multicast address/port (for
    emulated wired interfaces) or on frequency/bandwidth (for emulated wireless interfaces).

    Call \c emushark without arguments for further help.

    \section emu_main_annotations Predefined packet annotations
    \seechapter \ref senf::emu::annotations;
 */


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// mode: flyspell
// mode: auto-fill
// End:
