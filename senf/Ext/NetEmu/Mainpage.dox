//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \mainpage PPI Network Simulator

    This library provides facilities to simulate real physical networks using the PPI.

    \autotoc

    \section emu_main_interfaces Emulated network interfaces
    \seechapter \ref senf_emu_interfaces \n
    \seechapter \ref senf_emu_interface_implementations \n
    \seechapter \ref senf::emu::ApplyInterfaceDecorator \n
    \seechapter \ref senf::emu::EmulatedFrequencyRegistry

    The NetEmu interface abstraction allows to arbitrarily mix emulated and physical interfaces.
    This gives a lot of flexibility in scenario configuration.

    \warning You must start the senf::emu::EmulatedFrequencyRegistry before any traffic will flow
        across emulated wireless interfaces. See the documentation for more.

    \section emu_main_emushark Packet capture utility for emulated networks

    NetEmu includes a packet sniffing utility \c emushark which allows to capture packets on
    arbitrary emulated networks. Capture operation is possible either on multicast address/port (for
    emulated wired interfaces) or on frequency/bandwidth (for emulated wireless interfaces).

    Call \c emushark without arguments for further help.

    \section emu_main_annotations Predefined packet annotations
    \seechapter \ref senf::emu::annotations;
 */


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// mode: flyspell
// mode: auto-fill
// End:
