//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief REDQueue inline non-template implementation */

//#include "REDQueue.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////
prefix_ bool senf::emu::REDQueue::v_enqueue(senf::Packet const & packet, bool force)
{
    if (!force and (queueSize_ > lowThresh_)) {
        if ( (boost::uint32_t(rand()) % (queueLimit_ - lowThresh_ + 1)) <= (queueSize_ - lowThresh_) ) {
            packetsDroppedTotal_++;
            return false;  // no additional packet added to queue
        }
    }

    queue_.emplace(packet);
    queueSize_ += packet.size();
    return true;
}

prefix_ void senf::emu::REDQueue::v_pop()
{
    if (SENF_LIKELY(frontPktSize_ > 0)) {
        queueSize_ -= frontPktSize_;
        queue_.pop();
        frontPktSize_ = 0;
    }
}

prefix_ unsigned senf::emu::REDQueue::v_peek(unsigned maxSize)
    const
{
    if (!queue_.empty() and (queue_.front().size() <= maxSize))
        return frontPktSize_ = queue_.front().size();
    return 0;
}

prefix_ senf::Packet const & senf::emu::REDQueue::v_front()
    const
{
    return queue_.front();
}

prefix_ bool senf::emu::REDQueue::v_empty()
    const
{
    return queue_.empty();
}

prefix_ unsigned senf::emu::REDQueue::v_size()
    const
{
    return queueSize_;
}

prefix_ void senf::emu::REDQueue::incrDropped()
{
    packetsDroppedTotal_++;
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
