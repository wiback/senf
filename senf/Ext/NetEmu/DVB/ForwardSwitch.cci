//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief ForwardSwitch inline non-template implementation */

#include "ForwardSwitch.hh"

// Custom includes

#define prefix_ inline
///////////////////////////////cc.p////////////////////////////////////////

prefix_ senf::emu::ForwardSwitch::ForwardSwitch(bool state)
{
    route( input, output );
    forward( state);
}

prefix_ void senf::emu::ForwardSwitch::onRequest_discard()
{
    input.read(); // discard automatically
}

prefix_ void senf::emu::ForwardSwitch::onRequest_forward()
{
    output.write( input.read());
}

prefix_ bool senf::emu::ForwardSwitch::forward()
    const
{
    return forward_;
}

prefix_ void senf::emu::ForwardSwitch::forward(bool state)
{
    forward_ = state;
    if (state)
        input.onRequest( &ForwardSwitch::onRequest_forward );
    else
        input.onRequest( &ForwardSwitch::onRequest_discard );
}


///////////////////////////////cci.e////////////////////////////////////////
#undef prefix_

