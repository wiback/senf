// $Id:$
//
// Copyright (C) 2009
// Fraunhofer Institute for Open Communication Systems (FOKUS)
//
// The contents of this file are subject to the Fraunhofer FOKUS Public License
// Version 1.0 (the "License"); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at 
// http://senf.fokus.fraunhofer.de.de/license.html
//
// The Fraunhofer FOKUS Public License Version 1.0 is based on, 
// but modifies the Mozilla Public License Version 1.1.
// See the full license text for the amendments.
//
// Software distributed under the License is distributed on an "AS IS" basis, 
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
// for the specific language governing rights and limitations under the License.
//
// The Original Code is Fraunhofer FOKUS code.
//
// The Initial Developer of the Original Code is Fraunhofer-Gesellschaft e.V. 
// (registered association), Hansastra√üe 27 c, 80686 Munich, Germany.
// All Rights Reserved.
//
// Contributor(s):
//       Stefan Bund <g0dil@berlios.de>

/** \file
    \brief InterfaceAPI internal header */

#ifndef IH_SENF_Ext_NetEmu_InterfaceAPI_
#define IH_SENF_Ext_NetEmu_InterfaceAPI_ 1

// Custom includes

//-/////////////////////////////////////////////////////////////////////////////////////////////////

namespace senf {
namespace emu {
namespace detail {

    /** \brief Internal: Provide interface() member */
    template <class Interface>
    class InterfaceAccess
    {
    public:
        virtual ~InterfaceAccess();

        Interface & interface();
        Interface const & interface() const;
    };

    /** \brief Internal: Provide receiver() and transmitter() members */
    template <class Receiver, class Transmitter>
    class CommfaceAccess
    {
    public:
        virtual ~CommfaceAccess();

        Receiver & receiver();
        Receiver const & receiver() const;

        Transmitter & transmitter();
        Transmitter const & transmitter() const;
    };

}}}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
