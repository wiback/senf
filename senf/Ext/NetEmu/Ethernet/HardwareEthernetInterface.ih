//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief HardwareEthernetInterface internal header */

#ifndef IH_SENF_Ext_NetEmu_HardwareEthernetInterface_
#define IH_SENF_Ext_NetEmu_HardwareEthernetInterface_ 1

// Custom includes
#include <senf/Socket/Protocols/Raw/MMapPacketSocketHandle.hh>
#include <senf/PPI/QueueSocketSourceSink.hh>
#include "EthernetAnnotator.hh"

//-/////////////////////////////////////////////////////////////////////////////////////////////////

namespace senf {
namespace emu {

    class HardwareEthernetInterface;

namespace detail {
   
    /** \brief Internal: Hardware Ethernet interface PPI network */
    struct HardwareEthernetInterfaceNet
    {
        ConnectedMMapPacketSocketHandle socket;

        ppi::module::ActiveQueueSocketSource<EthernetPacket> source;
        ppi::module::PassiveQueueSocketSink<> sink;

        EthernetAnnotator annotatorRx_;
        EthernetAnnotator annotatorTx_;

        ppi::connector::ActiveOutputJack<EthernetPacket> netOutput;
        ppi::connector::PassiveInputJack<EthernetPacket> netInput;

        HardwareEthernetInterfaceNet();

        HardwareEthernetInterface & self();
        HardwareEthernetInterface const & self() const;

        void assignSockets(ConnectedMMapPacketSocketHandle & socket);

        unsigned rcvBuf();
        void rcvBuf(unsigned);
        unsigned sndBuf();
        void sndBuf(unsigned);

        void setupBPF(senf::MACAddress const & hwAddr, bool srcOnly = true);
        void clearBPF();
    };

}}}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
