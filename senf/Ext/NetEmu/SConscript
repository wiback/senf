#
# Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
#                    Network Research Group (NET)
#                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
#                    Contact: http://wiback.org
#
# This file is part of the SENF code tree.
# It is licensed under the 3-clause BSD License (aka New BSD License).
# See LICENSE.txt in the top level directory for details or visit
# https://opensource.org/licenses/BSD-3-Clause
#


Import('env')
import SENFSCons
import glob
import os
import re

###########################################################################

emusharksources          = [ 'emushark.cc' ]
bundlesources            = [ 'Packets.cc', 'P2PTunnel/TunnelCtrlPacket.cc' ]

sources, tests, includes = SENFSCons.Glob(env,
                                  exclude = emusharksources + bundlesources,
                                  subdirs = ['WLAN', "Ethernet", "DVB", "P2PTunnel", "TAP", "Modules"] )
subscripts               = sorted(env.Glob("*/SConscript", strings=True))
doxyfile                 = env.Glob("Doxyfile")

bundleobjects = env.Object(bundlesources)
cobject = env.CombinedObject('${LOCALLIBDIR}/NetEmuBundle${OBJADDSUFFIX}', bundleobjects)
sobundle = env.SharedLibrary('${LOCALLIBDIR}/NetEmuBundle${OBJADDSUFFIX}', bundlesources,
                             LIBS=[], SHLIBPREFIX='')
objects = env.Object(sources) + bundleobjects

if not env.GetOption('clean'):
    if not env['cxx11']:
        env.Fail( 'No C++11 standard enabled, which is required by NetEmu. Please compile SENF with std=c++11:\n'
                  '  $ scons cxx11=1 ...\n')
    env.Append(
       EXTRA_LIBS = env.Flatten(env.subst_list('$LIBNL_LIBS')),
       CPPPATH = env.subst('$LIBNL_CPPPATH') )

emushark = env.Program( 'emushark', emusharksources + [ '${ALLBUNDLES}' ],
                EXTRA_LIBS = ['$EXTRA_LIBS', 'dl'] )

# Create Version.hh
env.CreateVersionFile( "Version.hh", source=
        '// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)\n'
        '//                    Network Research Group (NET)\n'
        '//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY\n'
        '//                    Contact: http://wiback.org\n'
        '//\n'
        '// This file is part of the SENF code tree.\n'
        '// It is licensed under the 3-clause BSD License (aka New BSD License).\n'
        '// See LICENSE.txt in the top level directory for details or visit\n'
        '// https://opensource.org/licenses/BSD-3-Clause\n'
        '//\n'
        '// auto-generated file.\n\n'
        '#ifndef HH_SENF_Ext_NetEmu_Version_\n'
        '#define HH_SENF_Ext_NetEmu_Version_ 1\n\n'
        '// %(name)s_VERSION %% 100000 is the revision number\n'
        '// %(name)s_VERSION / 100000 %% 100 is the minor version\n'
        '// %(name)s_VERSION / 10000000 is the major version\n'
        '#define %(name)s_VERSION %(major_version)d%(minor_version)02d%(revision)05d\n\n'
        '#define %(name)s_LIB_VERSION "%(major_version)d.%(minor_version)02d"\n\n'
        '#endif\n',
        name='SENF_NETEMU', major_version=1, minor_version=2,
        directory = env.Dir('#/senf/Ext/NetEmu').abspath )

env.Default(cobject)
env.Default(sobundle)
#env.Default(emushark)
env.Append(ALLOBJECTS = objects, PACKET_BUNDLES = cobject)
env.Install('$OBJINSTALLDIR', cobject)
env.Install('$OBJINSTALLDIR', sobundle)
env.Install('$BININSTALLDIR', emushark)

if tests                 : env.BoostUnitTest('test', tests + ['#/senf/Packets/80211Bundle/radiotap.o'],
                                 TEST_EXTRA_LIBS = ['$TEST_EXTRA_LIBS'] )
if includes              : env.InstallSubdir('$INCLUDEINSTALLDIR', includes)
if doxyfile              : env.Depends( SENFSCons.Doxygen(env), env.Value(env['SENF_NETEMU_REVISION']))
if subscripts            : SConscript(subscripts)

