import sys, os, os.path
try: sys.path.append(((_ for _ in (os.path.join(os.path.sep.join(('..' for _ in range(_))),d,
     'site_scons') for d in ('../../../../','senf','Senf') for _ in range(len(os.getcwd().split('/'))))
     if os.path.exists(_))).next())
except: pass
import os.path, glob, senfutil

env = Environment(ENV = os.environ)
senfutil.parseArguments(env)
senfutil.SetupForSENF(env)
senfutil.NetEmu.SetupForNetEmu(env)
senfutil.DefaultOptions(env)

rev = 'r' + os.popen("svnversion").read().strip().lower()
if rev == 'rexported':
    rev = os.popen("gitsvnversion").read().strip().lower()

### the boost libs should be linked staticly:
boostlibs = [ '-l%s' % lib for lib in env['LIBS'] if lib.startswith('$BOOST') ]
env.Replace( LIBS      = [ lib for lib in env['LIBS'] if not lib.startswith('$BOOST') ] )
env.Append(  LINKFLAGS = [ '-Wl,-Bdynamic' ],
             LINKCOM   = ' -Wl,-Bstatic ' + ' '.join(boostlibs) + ' -Wl,-Bdynamic' )


env.Default( env.Program('Analyzer',  ['Analyzer.cc',  'Configuration.cc', 'InternalThroughputTestPacket.cc', '${BUNDLEDIR}/AllBundles${LIBADDSUFFIX}.o'] ) )

