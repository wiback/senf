//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


#include <senf/Utils/senflikely.hh>
#include "TIMPacket.hh"

#define prefix_ inline
///////////////////////////////cci.p///////////////////////////////////////

prefix_ senf::PacketInterpreterBase::factory_t senf::MPLSPacketType::nextPacketType(packet p)
{
    if (SENF_LIKELY(p->s()))  // last MPLS header => our fast-path
        return senf::TIMPacket::factory();
    else
        return MPLSPacket::factory();
}

prefix_ void senf::MPLSPacketType::finalize(packet p)
{
    if (SENF_UNLIKELY(p.next(senf::nothrow).is<MPLSPacket>()))  // not the last label on the MPLS stack
        p->s_() << false;
    else
        p->s_() << true;
}

///////////////////////////////cci.e///////////////////////////////////////
#undef prefix_
