//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: http://wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief HardwareWLANInterface inline non-template implementation */

#include "HardwareWLANInterface.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::emu::detail::HardwareWLANInterfaceNet

prefix_ senf::emu::HardwareWLANInterface &
senf::emu::detail::HardwareWLANInterfaceNet::self()
{
    return *static_cast<HardwareWLANInterface *>(this);
}

prefix_ senf::emu::HardwareWLANInterface const &
senf::emu::detail::HardwareWLANInterfaceNet::self()
    const
{
    return *static_cast<HardwareWLANInterface const *>(this);
}

prefix_ void senf::emu::HardwareWLANInterface::setREDFilterCallbackRx(senf::ppi::REDFilterCallback const & cb)
{
    source.setREDFilterCallback(cb);
}

prefix_ void senf::emu::HardwareWLANInterface::setREDFilterCallbackTx(senf::ppi::REDFilterCallback const & cb)
{
    sink.setREDFilterCallback(cb);
}

prefix_ void senf::emu::HardwareWLANInterface::setREDFilterCallbackRxMonitor(senf::ppi::REDFilterCallback const & cb)
{
    monSource.setREDFilterCallback(cb);
}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::emu::HardwareWLANInterface

prefix_ int senf::emu::HardwareWLANInterface::frequencyOffset()
    const
{
    return frequencyOffset_;
}

prefix_ senf::emu::VLanId const & senf::emu::HardwareWLANInterface::pvid()
    const
{
    return pvid_;
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
