//
// Copyright (c) 2020 Fraunhofer Institute for Applied Information Technology (FIT)
//                    Network Research Group (NET)
//                    Schloss Birlinghoven, 53754 Sankt Augustin, GERMANY
//                    Contact: support@wiback.org
//
// This file is part of the SENF code tree.
// It is licensed under the 3-clause BSD License (aka New BSD License).
// See LICENSE.txt in the top level directory for details or visit
// https://opensource.org/licenses/BSD-3-Clause
//


/** \file
    \brief FdManager inline non-template implementation */

//#include "FdManager.ih"

// Custom includes

#define prefix_ inline
//-/////////////////////////////////////////////////////////////////////////////////////////////////

//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::scheduler::FdManager

prefix_ senf::scheduler::detail::FdManager::FdManager()
    : eventTime_ (senf::ClockService::now())
{
    eventTimestamp_.update(eventTime_);
}

prefix_ bool senf::scheduler::detail::FdManager::set(int fd, int events, Event * entry)
{
    return poller_.set(fd, events, entry);
}

prefix_ void senf::scheduler::detail::FdManager::remove(int fd)
{
    poller_.remove(fd);
}

prefix_ void senf::scheduler::detail::FdManager::timeout(int t)
{
    poller_.timeout(t);
}

prefix_ int senf::scheduler::detail::FdManager::timeout()
    const
{
    return poller_.timeout();
}

prefix_ senf::ClockService::clock_type const & senf::scheduler::detail::FdManager::eventTime()
    const
{
    return eventTime_;
}

prefix_ senf::CyclicTimestamp const & senf::scheduler::detail::FdManager::eventTimestamp()
    const
{
    return eventTimestamp_;
}


//-/////////////////////////////////////////////////////////////////////////////////////////////////
// senf::scheduler::detail::FdManager::Event

prefix_ senf::scheduler::detail::FdManager::Event::~Event()
{}

//-/////////////////////////////////////////////////////////////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
