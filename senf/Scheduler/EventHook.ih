// $Id$
//
// Copyright (C) 2008 
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief EventHook internal header */

#ifndef IH_SENF_Scheduler_EventHook_
#define IH_SENF_Scheduler_EventHook_ 1

// Custom includes
#include "../Utils/singleton.hh"

///////////////////////////////ih.p////////////////////////////////////////

namespace senf {
namespace scheduler {

    void restart();

namespace detail {
    
    class EventHookDispatcher
        : public singleton<EventHookDispatcher>
    {
    public:
        using singleton<EventHookDispatcher>::instance;
        using singleton<EventHookDispatcher>::alive;

        void add(EventHook & event);
        void remove(EventHook & event);

        void prepareRun();

        bool empty() const;

    private:
        EventHookDispatcher();
        ~EventHookDispatcher();

        typedef boost::intrusive::ilist< 
            EventHookListBase::value_traits<EventHook>, false > EventList;

        EventList events_;

        friend void senf::scheduler::restart();
        friend class singleton<EventHookDispatcher>;
    };

}}}

///////////////////////////////ih.e////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
