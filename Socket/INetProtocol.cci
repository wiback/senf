// $Id$
//
// Copyright (C) 2006 
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <stefan.bund@fokus.fraunhofer.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

// Definition of inline non-template functions

// Custom includes
#include <sys/socket.h>
#include "Utils/Exception.hh"

#define prefix_ inline
///////////////////////////////cci.p///////////////////////////////////////

prefix_ void satcom::lib::INet4AddressingPolicy::local(FileHandle handle, Address & addr)
{
    addr.clear();
    socklen_t l (addr.sockaddr_len());
    if (::getsockname(handle.fd(),addr.sockaddr_p(),&l) < 0)
        throw SystemException(errno);
}

prefix_ void satcom::lib::INet4AddressingPolicy::bind(FileHandle handle, Address const & addr)
{
    if (::bind(handle.fd(),addr.sockaddr_p(),addr.sockaddr_len()) < 0)
        throw SystemException(errno);
}

prefix_ void satcom::lib::INet4AddressingPolicy::do_peer(FileHandle handle, Address & addr)
{
    addr.clear();
    socklen_t l (addr.sockaddr_len());
    if (::getpeername(handle.fd(),addr.sockaddr_p(),&l) < 0)
        throw SystemException(errno);
}

prefix_ void satcom::lib::INet4AddressingPolicy::do_connect(FileHandle handle,
                                                            Address const & addr)
{
    if (::connect(handle.fd(),addr.sockaddr_p(),addr.sockaddr_len()) < 0)
        throw SystemException(errno);
}

///////////////////////////////cci.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// c-file-style: "satcom"
// End:
