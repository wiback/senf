// $Id$
//
// Copyright (C) 2006
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <stefan.bund@fokus.fraunhofer.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief PacketProtocol and PacketSocketHandle non-inline template implementation
 */

#include "PacketSocketHandle.ih"

// Custom includes

#define prefix_
///////////////////////////////ct.p////////////////////////////////////////

template <class ForwardRange>
prefix_ unsigned
senf::detail::Range_LLAddressCopier<ForwardRange>::operator()(unsigned char * target)
    const
{
    std::size_t len (0);
    typename boost::range_const_iterator<ForwardRange>::type i (boost::begin(range_));
    for (; i != boost::end(range_) && len<8; ++i, ++len, ++target)
        *target = *i;
    if (i != boost::end(range_))
        throw InvalidLLSocketAddressException();
    return len;
}

///////////////////////////////ct.e////////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// comment-column: 40
// End:
