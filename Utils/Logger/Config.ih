// $Id$
//
// Copyright (C) 2007 
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief Config internal header */

#ifndef IH_Config_
#define IH_Config_ 1

// Custom includes
#include <boost/preprocessor/expand.hpp>
#include <boost/preprocessor/seq/for_each.hpp>
#include <boost/preprocessor/seq/to_tuple.hpp>
#include "Defaults.hh"

///////////////////////////////ih.p////////////////////////////////////////

namespace senf {
namespace log {
namespace detail {

    template <class Stream, class Area>
    struct Config
    {
        typedef typename Config<Stream,void>::compileLimit compileLimit;
    };

    template <class Stream>
    struct Config<Stream, void>
    {
        typedef typename Stream::compileLimit compileLimit;
    };

#   define SENF_LOG_CONF_DEFINE(stream, area, level)                                              \
           template <>                                                                            \
           struct Config<stream, area>                                                            \
           { typedef senf::log::level compileLimit; };

#   ifdef SENF_LOG_CONF

#       define _ void
#       define SLC_elt(r, data, elt) \
            BOOST_PP_EXPAND(SENF_LOG_CONF_DEFINE BOOST_PP_SEQ_TO_TUPLE(elt))

        BOOST_PP_SEQ_FOR_EACH(SLC_elt, x, SENF_LOG_CONF)

#       undef SLC_elt
#       undef _

#   endif

}}}



///////////////////////////////ih.e////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
