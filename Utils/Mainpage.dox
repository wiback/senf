namespace senf {

/** \mainpage The SENF Utilities Library

    The Utilities Library is a collection of independent utilities. We have 

    <dl>

    <dt>\ref logger</dt><dd>highly flexible logging infrastructure</dd>

    <dt>SystemException</dt><dd>standard exception for system errors (errno)</dd>

    <dt>\ref time</dt><dd>Very rudimentary microsecond time support</dd>

    <dt>\ref process</dt><dd>Some simple process management and daemon helpers<?dd>

    <dt>\ref membind</dt><dd>a simple <a
    href="http://www.boost.org/libs/bind/bind.html">Boost.Bind</a> extension</dd>

    <dt>intrusive_refcount</dt><dd>mixin to simplify writing classes for use with <a
    href="http://www.boost.org/libs/smart_ptr/intrusive_ptr.html">boost::intrusive_ptr</a></dd>

    <dt>SafeBool</dt><dd>a mixin class to provide a really safe replacement for <tt>operator
    bool</tt></dd>
    
    <dt>pool_alloc_mixin</dt><dd>mixin to provide pool allocation to a class</dd>
    
    <dt>\ref singleton</dt><dd>mixin to make a class a singleton</dd>

    <dt>prettyName()</dt><dd>an interface to the C++ demangler of g++ to get formated type names
    from typeinfo objects</dd>

    <dt>\ref SENF_SCOPED_BUFFER</dt><dd>a portable way to efficiently allocate temporary
    buffers</dd>

    <dt>\ref contiguous_storage_iterator</dt><dd>traits class to check iterator type for raw pointer
    accessibility</dd>

    <dt>\ref TypeIdValue</dt><dd>class wrapping a typeid in a way that it can be used like any other
    value type, e.g. as the key in a map.</dd>

    </dl>
 */

}


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// mode: flyspell
// mode: auto-fill
// End:
