// $Id$
//
// Copyright (C) 2007 
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief ListParser internal header */

#ifndef IH_ListParser_
#define IH_ListParser_ 1

// Custom includes
#include <boost/iterator/iterator_facade.hpp>

///////////////////////////////ih.p////////////////////////////////////////

namespace senf {
namespace detail {

    /** \brief Internal: Iterator used by ListParser

        \internal
     */
    template <class ElementParser, class IteratorPolicy>
    class ListParser_Iterator
        : public boost::iterator_facade< ListParser_Iterator<ElementParser,IteratorPolicy>,
                                         ElementParser,
                                         boost::forward_traversal_tag,
                                         ElementParser >,
          private IteratorPolicy
    {
    public:
        enum Begin_t { Begin };
        enum End_t { End };

        ListParser_Iterator();
        ListParser_Iterator(PacketParserBase::data_iterator i, PacketParserBase::state_type s, 
                            Begin_t);
        ListParser_Iterator(PacketParserBase::data_iterator i, PacketParserBase::state_type s, 
                            End_t);
        ListParser_Iterator(PacketParserBase::data_iterator i, PacketParserBase::state_type s, 
                            PacketParserBase::data_iterator p);

        PacketParserBase::data_iterator raw() const;
        
    private:
        friend class boost::iterator_core_access;
        
        ElementParser dereference() const;
        bool equal(ListParser_Iterator const & other) const;
        void increment();

        PacketParserBase::data_iterator i_;
        PacketParserBase::state_type s_;
    };

}}

///////////////////////////////ih.e////////////////////////////////////////
#endif


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
