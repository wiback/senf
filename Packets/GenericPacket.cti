// $Id$
//
// Copyright (C) 2006 
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <stefan.bund@fokus.fraunhofer.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

// Definition of inline template functions

//#include "GenericPacket.ih"

// Custom includes

#define prefix_ inline
///////////////////////////////cti.p///////////////////////////////////////

template <unsigned HEADER, unsigned TRAILER>
template <class Arg>
prefix_ satcom::pkf::GenericPacket<HEADER,TRAILER>::GenericPacket(Arg const & arg)
: Packet(arg)
{}

template <unsigned HEADER, unsigned TRAILER>
prefix_ void satcom::pkf::GenericPacket<HEADER,TRAILER>::init()
{
    insert(begin(),HEADER,0);
    insert(end(),TRAILER,0);
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::iterator
satcom::pkf::GenericPacket<HEADER,TRAILER>::begin_header()
    const
{
    return this->begin();
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::iterator
satcom::pkf::GenericPacket<HEADER,TRAILER>::end_header()
    const
{
    return this->begin() + HEADER;
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::size_type
satcom::pkf::GenericPacket<HEADER,TRAILER>::header_len()
{
    return HEADER;
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::iterator
satcom::pkf::GenericPacket<HEADER,TRAILER>::begin_trailer()
    const
{
    return this->end() - TRAILER;
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::iterator
satcom::pkf::GenericPacket<HEADER,TRAILER>::end_trailer()
    const
{
    return this->end();
}

template <unsigned HEADER, unsigned TRAILER>
prefix_ typename satcom::pkf::GenericPacket<HEADER,TRAILER>::size_type
satcom::pkf::GenericPacket<HEADER,TRAILER>::trailer_len()
{
    return TRAILER;
}

///////////////////////////////cti.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// c-file-style: "satcom"
// End:
