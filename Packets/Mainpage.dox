/** \mainpage The SENF Packet Library

    \section arch Overall Architecture

    The Packet library consists of several components:
    
    \li The \ref packet_module manages the packet data and provides the framework for handling the
        chain of packet headers. The visible interface is provided by the Packet class.
    \li \ref packetparser provides the framework for interpreting packet data. It handles
        parsing the packet information into meaningful values.
    \li The \ref protocolbundles provide concrete implementations for interpreting packets of
        some protocol. The Protocol Bundles are built on top of the basic packet library.
 */

/*    

     - ParseInt.hh: Lots of parsers for integer numbers like senf::Parse_UInt8, for integer
       bitfields like senf::Parse_UIntField and senf::Parse_Flag to parse boolean flags.

     - ParseArray.hh: The senf::Parse_Array parser to parse arbitrary fixed-size arrays of
       fixed-size elements (that is sub-parsers).

     - ParseVec.hh: The senf::Parse_Vector parser to parse dynamically sized arrays of fixed-size
       elements (that is sub-parsers).

    See senf::ParserBase for further information.

    \section stuff Other Utilities

    The pkf also comprises some additional utilities to support the development of packet classes.

    The senf::PacketRegistry implements a registry of packets keyed by an arbitrary type. The
    registry is used to find a packet type given some kind of id (like the ethertype value from the
    ethernet header). Together with it's support classes (especially senf::PacketRegistryMixin) this
    class greatly simplifies implementing the needed table lookups.
 */


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// mode: flyspell
// mode: auto-fill
// End:
