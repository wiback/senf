// $Id$
//
// Copyright (C) 2008 
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief FdManager inline non-template implementation */

//#include "FdManager.ih"

// Custom includes

#define prefix_ inline
///////////////////////////////cci.p///////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// senf::scheduler::FdManager

prefix_ senf::scheduler::detail::FdManager::FdManager()
    : eventTime_ (senf::ClockService::now())
{}

prefix_ bool senf::scheduler::detail::FdManager::set(int fd, int events, Event * entry)
{
    return poller_.set(fd, events, entry);
}

prefix_ void senf::scheduler::detail::FdManager::remove(int fd)
{
    poller_.remove(fd);
}

prefix_ void senf::scheduler::detail::FdManager::timeout(int t)
{
    poller_.timeout(t);
}

prefix_ int senf::scheduler::detail::FdManager::timeout()
    const
{
    return poller_.timeout();
}

prefix_ senf::ClockService::clock_type senf::scheduler::detail::FdManager::eventTime()
    const
{
    return eventTime_;
}


///////////////////////////////////////////////////////////////////////////
// senf::scheduler::detail::FdManager::Event

prefix_ senf::scheduler::detail::FdManager::Event::~Event()
{}

///////////////////////////////cci.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
