// $Id$
//
// Copyright (C) 2007 
// Fraunhofer Institute for Open Communication Systems (FOKUS) 
// Competence Center NETwork research (NET), St. Augustin, GERMANY 
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

namespace senf {

/** \mainpage The SENF Scheduler Library

    The Scheduler library provides a simple yet flexible abstraction
    of the standard asynchronous UNIX mainloop utilizing \c select or
    \c poll. The Scheduler library is based on the highly efficient
    (but linux specific) \c epoll() system call.

    The library provides
    \li a central \ref Scheduler singleton and
    \li \ref ReadHelper and \ref WriteHelper templates to simplify
        common tasks.

    In it's current incarnation, the library only supports network
    file handles (including pipes etc) and simple timers (especially
    it does not support asynchronous notification for on-disc file
    transfers etc). Additional features will be added:
    \li UNIX signal support
    \li async IO support for local (disc) file handles
    \li multi threading support
    \li IPC support for multithreaded applications
 */

}


// Local Variables:
// mode: c++
// fill-column: 100
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// mode: flyspell
// mode: auto-fill
// End:
