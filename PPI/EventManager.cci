// $Id$
//
// Copyright (C) 2007 
// Fraunhofer Institut fuer offene Kommunikationssysteme (FOKUS)
// Kompetenzzentrum fuer Satelitenkommunikation (SatCom)
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief EventManager inline non-template implementation */

//#include "EventManager.ih"

// Custom includes
#include "../Scheduler/Scheduler.hh"

#define prefix_ inline
///////////////////////////////cci.p///////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// senf::ppi::EventManager

prefix_ senf::ppi::EventManager & senf::ppi::EventManager::instance()
{
    static EventManager manager;
    return manager;
}

prefix_ senf::ClockService::clock_type senf::ppi::EventManager::now()
{
    return Scheduler::instance().eventTime();
}

prefix_ senf::ClockService::clock_type senf::ppi::EventManager::time()
{
    return eventTime_;
}

////////////////////////////////////////
// private members

prefix_ void senf::ppi::EventManager::eventTime(ClockService::clock_type time)
{
    eventTime_ = time;
}

///////////////////////////////cci.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
