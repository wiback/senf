// $Id$
//
// Copyright (C) 2007
// Fraunhofer Institute for Open Communication Systems (FOKUS)
// Competence Center NETwork research (NET), St. Augustin, GERMANY
//     Stefan Bund <g0dil@berlios.de>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

/** \file
    \brief DebugModules inline template implementation */

//#include "DebugModules.ih"

// Custom includes
#include "../Utils/hexdump.hh"

#define prefix_ inline
///////////////////////////////cti.p///////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// senf::ppi::module::debug::Logger<Stream,Area,level>

template <class Stream, class Area, class Level>
prefix_ senf::ppi::module::debug::Logger<Stream,Area,Level>::Logger()
{}

////////////////////////////////////////
// private members

template <class Stream, class Area, class Level>
prefix_ void
senf::ppi::module::debug::Logger<Stream,Area,Level>::v_handlePacket(Packet const & packet)
{
    SENF_LOG_BLOCK_TPL((Stream)(Area)(Level)({
        packet.dump(log);
        hexdump(packet.last().data().begin(), packet.last().data().end(),log);
    }));
}

///////////////////////////////cti.e///////////////////////////////////////
#undef prefix_


// Local Variables:
// mode: c++
// fill-column: 100
// comment-column: 40
// c-file-style: "senf"
// indent-tabs-mode: nil
// ispell-local-dictionary: "american"
// compile-command: "scons -u test"
// End:
