OUTPUT_DIRECTORY       = doc
INPUT                  = .
FILE_PATTERNS          = *.c *.cc *.cci *.ct *.cti *.h *.hh *.ih *.mpp *.dox
EXCLUDE_PATTERNS       = *.test.cc *.test.hh .* *~ "#*#"
IMAGE_PATH             = .
INPUT_FILTER           = "$(TOPDIR)/doclib/filter.pl"

ALIASES                = "fixme=\xrefitem fixme \"Fix\" \"Fixmes\"" \
                         "idea=\xrefitem idea \"Idea\" \"Ideas\"" \
                         "implementation=\par \"Implementation note:\"" \
                         "doc=\xrefitem doc \"Documentation request\" \"Documentation Requests\""
REPEAT_BRIEF           = YES
ALWAYS_DETAILED_SEC    = YES
MULTILINE_CPP_IS_BRIEF = YES
DETAILS_AT_TOP         = YES
BUILTIN_STL_SUPPORT    = YES
EXTRACT_ALL            = YES
EXTRACT_PRIVATE        = NO
EXTRACT_STATIC         = NO
SUBGROUPING            = NO
HIDE_FRIEND_COMPOUNDS  = YES
INTERNAL_DOCS          = YES
SOURCE_BROWSER         = YES
ALPHABETICAL_INDEX     = YES
COLS_IN_ALPHA_INDEX    = 3
SEARCHENGINE           = YES

MACRO_EXPANSION        = YES
EXPAND_ONLY_PREDEF     = YES
PREDEFINED             = \
    DOXYGEN \
    "SENF_PPI_MODULE(x)=" \
    "SENF_PARSER()=" \
    "SENF_FIXED_PARSER()=" \
    "SENF_PARSER_INHERIT(name)=" \
    "SENF_PARSER_FIELD(name,type)=type name() const" \
    "SENF_PARSER_FIELD_RO(name,type)=type::value_type name() const" \
    "SENF_PARSER_BITFIELD(name, bits, type)=senf::ParseField_ ## type(bits) name() const" \
    "SENF_PARSER_BITFIELD_RO(name, bits, type)=senf::ParseField_ ## type(bits)::value_type name() const" \
    "SENF_PARSER_CUSTOM_FIELD(name, type, size, isize)=type name() const" \
    "SENF_PARSER_PRIVATE_FIELD(name,type)=private: type name() const; public:" \
    "SENF_PARSER_PRIVATE_FIELD_RO(name, type)=private: type::value_type name() const; public:" \
    "SENF_PARSER_PRIVATE_BITFIELD(name, bits, type)=private: senf::ParseField_ ## type(bits) name() const; public:" \
    "SENF_PARSER_PRIVATE_BITFIELD_RO(name, bits, type)=private: senf::ParseField_ ## type(bits)::value_type name() const; public:" \
    "SENF_PARSER_SKIP(x)=" \
    "SENF_PARSER_SKIP_BITS(x)=" \
    "SENF_PARSER_GOTO(x)=" \
    "SENF_PARSER_GOTO_OFFSET(x)=" \
    "SENF_PARSER_LABEL(x)=" \
    "SENF_PARSER_INIT()=void init()" \
    "SENF_PARSER_FINALIZE(name)=" \
    "ParseField_unsigned(b)=UIntFieldParser<?,?+b>" \
    "ParseField_signed(b)=IntFieldParser<?,?+b>" \
    "ParseField_bool(b)=FlagParser<?>" \
    "SENF_PARSER_ARRAY(name,elt_type,size)=senf::Parse_Array<size,elt_type> name() const" \
    "SENF_PARSER_LIST_B(name,elt_type,size_type)=senf::Parse_ListB<elt_type,size_type>::parser name() const" \
    "SENF_PARSER_LIST_N(name,elt_type,size_type)=senf::Parse_ListN<elt_type,size_type>::parser name() const" \
    "SENF_PARSER_VARIANT(name,chooser,types)=senf::Parse_Variant_Direct<chooser ## _t,?,types>::parser name() const" \
    "SENF_PARSER_PRIVATE_VARIANT(name,chooser,types)=private: senf::Parse_Variant_Direct<chooser ## _t,?,types>::parser name() const; public:" \
    "SENF_PARSER_VEC_N(name,elt_type,size_type)=senf::Parse_VectorN<elt_type,size_type> name() const"
EXPAND_AS_DEFINED      = prefix_ SENF_LOG_DEF_STREAM SENF_LOG_DEF_AREA SENF_LOG_DEF_AREA_I

HTML_HEADER            = "$(TOPDIR)/doclib/doxy-header.html"
HTML_FOOTER            = "$(TOPDIR)/doclib/doxy-footer.html"
GENERATE_LATEX         = NO
GENERATE_MAN           = NO
GENERATE_XML           = YES

HAVE_DOT               = YES
CLASS_GRAPH            = YES
COLLABORATION_GRAPH    = NO
TEMPLATE_RELATIONS     = NO
INCLUDE_GRAPH          = YES
INCLUDED_BY_GRAPH      = YES
GROUP_GRAPHS           = NO
MAX_DOT_GRAPH_DEPTH    = 3
DOT_GRAPH_MAX_NODES    = 10
DOT_MULTI_TARGETS      = YES
DOT_CLEANUP            = NO
DOT_PATH               = "$(TOPDIR)/doclib"

@INCLUDE = "$(TOPDIR)/Doxyfile.local"

# Local Variables:
# mode: indented-text
# indent-tabs-mode: nil
# End:
